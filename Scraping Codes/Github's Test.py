{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4c3eafe9",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd \n",
    "import re\n",
    "import requests\n",
    "import time\n",
    "import xlsxwriter\n",
    "import urllib.request\n",
    "import json\n",
    "import tabula as tb\n",
    "import PyPDF2\n",
    "import warnings\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pdfplumber\n",
    "\n",
    "from ast import Try\n",
    "from lxml import html, etree\n",
    "from datetime import datetime\n",
    "from urllib.request import urlopen\n",
    "from bs4 import BeautifulSoup\n",
    "from datetime import date, timedelta\n",
    "from urllib.error import URLError\n",
    "from tabula import read_pdf\n",
    "\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "filename=\"/Users/kendeas/Desktop/CypERN/04.Billion Prices Cyprus/Testing_.xlsx\"\n",
    "\n",
    "df = pd.read_excel(filename)\n",
    "urls=pd.read_excel(\"/Users/kendeas/Desktop/CypERN/04.Billion Prices Cyprus/Product_urls.xlsx\")\n",
    "no_website=[]\n",
    "list_=pd.DataFrame(columns=[\"Date\",\"Name\",\"Price\",\"Subclass\",\"Comitidy\",\"Retailer\"])\n",
    "\n",
    "\n",
    "def results_ikea(u):\n",
    "    new_row = []\n",
    "    header = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36',}\n",
    "    Item_url_=urls[\"Item.url\"].iloc[u]\n",
    "    url_new = \"https://www.ikea.com.cy\"+Item_url_\n",
    "    bs = BeautifulSoup(url_new, \"html.parser\")\n",
    "    response = requests.get(bs)    \n",
    "    if (response.status_code != 200) or (\"ERROR 404\" in response.text) or (\"μήπως κάτι λείπει;\" in response.text):\n",
    "        no_website.append(response)\n",
    "        pass\n",
    "    else:\n",
    "        soup = BeautifulSoup(response.content, \"html.parser\")\n",
    "        element_soup = soup.find_all(\"span\",{\"class\":\"price__sr-text\"})\n",
    "        \n",
    "        if (element_soup):\n",
    "            element_soup_1=element_soup[0]\n",
    "            element_soup_2=element_soup_1.text\n",
    "            element_soup_3 = element_soup_2.replace('€', '').replace(\",\",\".\").strip()\n",
    "            if \"Τρέχουσα τιμή\" in element_soup_3:\n",
    "                element_soup_3=element_soup_3.replace(\"Τρέχουσα τιμή  \",\"\").replace(\",\",\".\")\n",
    "            \n",
    "            if \"Αρχική τιμή\" in element_soup_3:\n",
    "                element_soup_3=element_soup_3.replace(\"Αρχική τιμή  \",\"\").replace(\",\",\".\") \n",
    "                    \n",
    "            new_row.append(datetime.now().strftime('%Y-%m-%d'))\n",
    "            new_row.append(name_)\n",
    "            new_row.append(float(element_soup_3))\n",
    "            new_row.append(subclass_)\n",
    "            new_row.append(comitidy_)\n",
    "            new_row.append(\"IKEA\")\n",
    "            list_.loc[len(list_)] = new_row\n",
    "            list_['Name'] = list_['Name'].apply(lambda x:x)\n",
    "            \n",
    "\n",
    "for u in range(0,len(urls)):\n",
    "    Item_url_=urls[\"Item.url\"].iloc[u]\n",
    "    name_=urls[\"Name\"].iloc[u]\n",
    "    subclass_=urls[\"subclass\"].iloc[u]\n",
    "    comitidy_=urls[\"Division\"].iloc[u]\n",
    "    retailer_=urls[\"Retailer\"].iloc[u]\n",
    "    if retailer_==\"IKEA\":\n",
    "        results_ikea(u)\n",
    "        \n",
    "df = pd.concat([df, list_], ignore_index=True)\n",
    "df.to_excel(filename, index=False) "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
